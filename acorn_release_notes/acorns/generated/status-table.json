{"products":"OpenShift Bugs","release":"4.14.0","overall_progress":{"all":3,"complete":0,"complete_pct":0.0,"warnings":0,"warnings_pct":0.0,"incomplete":3,"incomplete_pct":100.0},"tickets_with_checks":[[{"id":"Jira:OCPBUGS-13244","summary":"Instance configurations fails on Windows Server 2019 without the container feature","description":"h3. Description of problem\r\n\r\nWMCO fails to configure Windows Server 2019 instances on Azure that do not have the Containers feature pre-installed with the following error:\r\n{noformat}\r\n2023-05-05T18:11:02Z\tERROR\twc 10.0.128.7\terror running\t{\"cmd\": \"powershell.exe -NonInteractive -ExecutionPolicy Bypass \\\"Install-WindowsFeature -Name Containers\\\"\", \"out\": \"Install-WindowsFeature : Win32 internal error \\\"Access is denied\\\" 0x5 occurred while reading the console output buffer. \\r\\nContact Microsoft Customer Support Services.\\r\\nAt line:1 char:1\\r\\n+ Install-WindowsFeature -Name Containers\\r\\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n    + CategoryInfo          : ReadError: (:) [Install-WindowsFeature], HostException\\r\\n    + FullyQualifiedErrorId : ReadConsoleOutput,Microsoft.Windows.ServerManager.Commands.AddWindowsFeatureCommand\\r\\n \\r\\n\", \"error\": \"Process exited with status 1\"}\r\ngithub.com/openshift/windows-machine-config-operator/pkg/windows.(*windows).Run\r\n\t/build/windows-machine-config-operator/pkg/windows/windows.go:373\r\ngithub.com/openshift/windows-machine-config-operator/pkg/windows.(*windows).enableContainersWindowsFeature\r\n\t/build/windows-machine-config-operator/pkg/windows/windows.go:893\r\ngithub.com/openshift/windows-machine-config-operator/pkg/windows.(*windows).ensureHostNameAndContainersFeature\r\n\t/build/windows-machine-config-operator/pkg/windows/windows.go:530\r\ngithub.com/openshift/windows-machine-config-operator/pkg/windows.(*windows).Bootstrap\r\n\t/build/windows-machine-config-operator/pkg/windows/windows.go:430\r\ngithub.com/openshift/windows-machine-config-operator/pkg/nodeconfig.(*nodeConfig).Configure\r\n\t/build/windows-machine-config-operator/pkg/nodeconfig/nodeconfig.go:159\r\ngithub.com/openshift/windows-machine-config-operator/controllers.(*instanceReconciler).ensureInstanceIsUpToDate\r\n\t/build/windows-machine-config-operator/controllers/controllers.go:84\r\ngithub.com/openshift/windows-machine-config-operator/controllers.(*WindowsMachineReconciler).configureMachine\r\n\t/build/windows-machine-config-operator/controllers/windowsmachine_controller.go:433\r\ngithub.com/openshift/windows-machine-config-operator/controllers.(*WindowsMachineReconciler).Reconcile\r\n\t/build/windows-machine-config-operator/controllers/windowsmachine_controller.go:354\r\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Reconcile\r\n\t/build/windows-machine-config-operator/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:122\r\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).reconcileHandler\r\n\t/build/windows-machine-config-operator/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:323\r\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\r\n\t/build/windows-machine-config-operator/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:274\r\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\r\n\t/build/windows-machine-config-operator/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:235\r\n{noformat}\r\n{code:java}\r\nHow reproducible:{code:none}\r\nAlways\r\n{code}\r\nSteps to Reproduce:\r\n{code:none}\r\n1. Bring up a OCP 4.14 cluster on Azure\r\n2. Create a MachineSet with sku: 2019-datacenter-smalldisk\r\n3. Launch WMCO from source\r\n{code}\r\nActual results:\r\n{code:none}\r\nNode fails to get configured\r\n{code}\r\nExpected results:\r\n{code:none}\r\nNode should be configured\r\n{code}\r\nh3. Additional info\r\n\r\nThe issue here is that {{Install-WindowsFeature -Name Containers}} results in a progress bar being displayed and causes the {{Access is denied}} error. However I noticed that if you manually installed the containers feature while WMCO was retrying the configuration, the install still does not go through and times out waiting for a hybrid-ovn annotation. In the hybrid-overlay logs I saw:\r\n{noformat}\r\nF0508 19:28:55.018792    5108 hybrid-overlay-node.go:53] this version of Windows does not support HostRoute policies; network communication between this node and its pods will not work. HostRoute\r\npolicies are available as a KB update for Windows Server 2019 version 1809 and out of the box in Windows Server 2019 version 1903.\r\n{noformat}\r\nInterestingly {{2019-datacenter-smalldisk}} and {{2019-datacenter-with-containers-smalldisk}} have identical patch and hotfixes\r\n{code:java}\r\nPS C:\\Users\\capi> [System.Environment]::OSVersion.Version\r\n\r\nMajor  Minor  Build  Revision\r\n-----  -----  -----  --------\r\n10     0      17763  0\r\n\r\nPS C:\\Users\\capi> Get-HotFix\r\n\r\nSource        Description      HotFixID      InstalledBy          InstalledOn               \r\n------        -----------      --------      -----------          -----------\r\nwin2-mjrss    Update           KB5022511                          4/5/2023 12:00:00 AM\r\nwin2-mjrss    Security Update  KB5025229                          4/5/2023 12:00:00 AM\r\nwin2-mjrss    Security Update  KB5023789                          4/5/2023 12:00:00 AM\r\n\r\n{code}\r\nh4. Note\r\n\r\nIt is unclear why the progress bar issue does not show up with 2022 images which do not have the Container feature installed.","doc_type":"Bug Fix","doc_text":"Cause: WMCO fails to configure Windows Server 2019 instances on Azure that do not have the Containers feature pre-installed with \"Install-WindowsFeature : Win32 internal error \"Access is denied\" 0x5\r\noccurred while reading the console output buffer\". This happens because the command results in a progress bar being displayed and that cannot\r\nbe displayed over ssh and results in the error. \r\n\r\nConsequence: VM never get configured into a node\r\n\r\nFix: Fix this by silencing progress bar.\r\n\r\nResult: VM gets configured into a node","docs_contact":"Missing docs contact","doc_text_status":"Done","status":"Verified","is_open":true,"priority":"Blocker","url":"https://issues.redhat.com/browse/OCPBUGS-13244","assignee":"paravindh","components":["Windows Containers"],"product":"OpenShift Bugs","labels":[],"flags":null,"target_releases":["4.14.0"],"subsystems":{"Err":"The subsystems field is missing or malformed in ticket OCPBUGS-13244. The configured fields are: [\"\", \"\"]"},"groups":null,"public":false,"references":[]},{"development":"Ok","doc_type":"Ok","doc_status":"Ok","title_and_text":{"Error":"Missing title."},"target_release":"Ok"}],[{"id":"Jira:OCPBUGS-10227","summary":"[OCM-hypershift] Customer cannot handle an error cluster due to manifest deletion pending","description":"Description:\r\n\r\nCustomer cannot handle an error cluster due to manifest deletion pending \r\n\r\nHow reproducible:\r\n\r\n100%\r\n\r\nSteps:\r\n # Prepare a hosted cluster\r\n # Delete all of the operator-roles from AWS\r\n # Delete the oidc provider of the cluster\r\n # Delete the cluster\r\n\r\nActual result:\r\n\r\nThe cluster will stuck to error with the manifest work pending deletion for 24 hours\r\n\r\nAnd it is caused by the oidc provider deletion from the cluster\r\n\r\nBut customer have no way to re-create the oidc-provider for the cluster\r\n\r\n \r\n{code:java}\r\nlixue@Xue-Lis-MacBook-Pro ~ % rosa create oidc-provider -c sdq-ci-jewch\r\n? OIDC provider creation mode: auto\r\nI: Cluster 'sdq-ci-jewch' is error and does not need additional configuration.\r\n{code}\r\n \r\n\r\nExpect result:\r\n\r\nThere should be a way to recover the oidc-provider or force delete the pending error clusters","doc_type":"Bug Fix","doc_text":"Previously, a hosted cluster did not account for OpenID Connect (OIDC) providers, `oidc`, unavailability that caused the deletion of `machine` and `machineset` objects to stale. With this update, a hosted cluster can detect the status of an unavilable `odic` provider, so that the deletion of `machine` and `machineset` objects to not stale because of an unvailable `oidc` provider.  (link:https://issues.redhat.com/browse/OCPBUGS-10227[*OCPBUGS-10227*])","docs_contact":"Missing docs contact","doc_text_status":"Done","status":"Verified","is_open":true,"priority":"Major","url":"https://issues.redhat.com/browse/OCPBUGS-10227","assignee":"agarcial@redhat.com","components":["HyperShift"],"product":"OpenShift Bugs","labels":["M6","ServiceDeliveryBlocker","sd-hypershift"],"flags":null,"target_releases":["4.14.0"],"subsystems":{"Err":"The subsystems field is missing or malformed in ticket OCPBUGS-10227. The configured fields are: [\"\", \"\"]"},"groups":null,"public":false,"references":[]},{"development":"Ok","doc_type":"Ok","doc_status":"Ok","title_and_text":{"Error":"Text in one paragraph."},"target_release":"Ok"}],[{"id":"Jira:OCPBUGS-7446","summary":"Show type of sample on the samples view","description":"h3. Description\r\n\r\nAs a user, I would like to see the type of technology used by the samples on the samples view similar to the all services view. \r\n\r\nOn the samples view:\r\n!https://user-images.githubusercontent.com/1025424/203557427-b50d8f40-c959-4ad2-a835-9c2eea0a0f7a.png!\r\n\r\nIt is showing different types of samples, e.g. devfile, helm and all showing as .NET. It is difficult for user to decide which .Net entry to select on the list. We'll need something like the all service view where it shows the type of technology on the top right of each card for users to differentiate between the entries:\r\n!https://user-images.githubusercontent.com/7669867/203577517-935aee67-8607-4e17-a572-7ff185610e39.png!\r\nh3. Acceptance Criteria\r\n # Add visible label as the all services view on each card to show the technology used by the sample on the samples view.\r\n\r\nh3. Additional Details:","doc_type":"Bug Fix","doc_text":"* Previously, the *Samples* page in the {product-title} did not allow distinguishing between the types of samples listed. With this fix, you can identify the sample from the badges displayed on the *Samples* page. (link:https://issues.redhat.com/browse/OCPBUGS-7446[*OCPBUGS-7446*])","docs_contact":"Missing docs contact","doc_text_status":"Done","status":"Verified","is_open":true,"priority":"Major","url":"https://issues.redhat.com/browse/OCPBUGS-7446","assignee":"avik6028","components":["Dev Console"],"product":"OpenShift Bugs","labels":["catalog","samples","triaged"],"flags":null,"target_releases":["4.14.0"],"subsystems":{"Err":"The subsystems field is missing or malformed in ticket OCPBUGS-7446. The configured fields are: [\"\", \"\"]"},"groups":null,"public":false,"references":[]},{"development":"Ok","doc_type":"Ok","doc_status":"Ok","title_and_text":{"Error":"Text in one paragraph."},"target_release":"Ok"}]],"per_writer_stats":[{"name":"Missing docs contact","total":2,"complete":0,"warnings":0,"incomplete":2}],"generated_date":"Tue, 13 Jun 2023 15:49:36 +0000"}